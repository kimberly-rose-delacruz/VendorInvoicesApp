// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VendorInvoiceLibrary.Entities;
using VendorInvoicesApp.DatabaseAccess;

#nullable disable

namespace VendorInvoicesApp.Migrations
{
    [DbContext(typeof(VendorDbContext))]
    partial class VendorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VendorInvoicesApp.Entities.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<DateTime?>("InvoiceDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<double?>("PaymentTotal")
                        .HasColumnType("float");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("VendorId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            InvoiceId = 1,
                            InvoiceDate = new DateTime(2022, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentTermsId = 1,
                            PaymentTotal = 0.0,
                            VendorId = 1
                        },
                        new
                        {
                            InvoiceId = 2,
                            InvoiceDate = new DateTime(2022, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentTermsId = 1,
                            PaymentTotal = 0.0,
                            VendorId = 1
                        },
                        new
                        {
                            InvoiceId = 3,
                            InvoiceDate = new DateTime(2022, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentDate = new DateTime(2022, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentTermsId = 1,
                            PaymentTotal = 1221.99,
                            VendorId = 1
                        },
                        new
                        {
                            InvoiceId = 4,
                            InvoiceDate = new DateTime(2022, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentTermsId = 1,
                            PaymentTotal = 0.0,
                            VendorId = 1
                        },
                        new
                        {
                            InvoiceId = 5,
                            InvoiceDate = new DateTime(2022, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentTermsId = 3,
                            PaymentTotal = 0.0,
                            VendorId = 2
                        },
                        new
                        {
                            InvoiceId = 6,
                            InvoiceDate = new DateTime(2022, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentTermsId = 3,
                            PaymentTotal = 0.0,
                            VendorId = 2
                        },
                        new
                        {
                            InvoiceId = 7,
                            InvoiceDate = new DateTime(2022, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentDate = new DateTime(2022, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentTermsId = 3,
                            PaymentTotal = 1221.99,
                            VendorId = 2
                        },
                        new
                        {
                            InvoiceId = 8,
                            InvoiceDate = new DateTime(2022, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentTermsId = 3,
                            PaymentTotal = 0.0,
                            VendorId = 2
                        });
                });

            modelBuilder.Entity("VendorInvoicesApp.Entities.InvoiceLineItem", b =>
                {
                    b.Property<int>("InvoiceLineItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceLineItemId"));

                    b.Property<double?>("Amount")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceLineItemId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceLineItems");

                    b.HasData(
                        new
                        {
                            InvoiceLineItemId = 1,
                            Amount = 1100.4200000000001,
                            Description = "Line Item 1",
                            InvoiceId = 1
                        },
                        new
                        {
                            InvoiceLineItemId = 2,
                            Amount = 120.0,
                            Description = "Line Item 2",
                            InvoiceId = 1
                        },
                        new
                        {
                            InvoiceLineItemId = 3,
                            Amount = 550.0,
                            Description = "Line Item 3",
                            InvoiceId = 1
                        },
                        new
                        {
                            InvoiceLineItemId = 4,
                            Amount = 2323.21,
                            Description = "Line Item 1",
                            InvoiceId = 2
                        },
                        new
                        {
                            InvoiceLineItemId = 5,
                            Amount = 199.0,
                            Description = "Line Item 2",
                            InvoiceId = 2
                        },
                        new
                        {
                            InvoiceLineItemId = 6,
                            Amount = 659.0,
                            Description = "Line Item 3",
                            InvoiceId = 2
                        },
                        new
                        {
                            InvoiceLineItemId = 7,
                            Amount = 123.22,
                            Description = "Line Item 5 for invoice 7",
                            InvoiceId = 5
                        },
                        new
                        {
                            InvoiceLineItemId = 8,
                            Amount = 212.0,
                            Description = "Line Item 6 for invoice 6",
                            InvoiceId = 6
                        },
                        new
                        {
                            InvoiceLineItemId = 9,
                            Amount = 323.11000000000001,
                            Description = "Line Item 7 for invoice 7",
                            InvoiceId = 7
                        });
                });

            modelBuilder.Entity("VendorInvoicesApp.Entities.PaymentTerms", b =>
                {
                    b.Property<int>("PaymentTermsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentTermsId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DueDays")
                        .HasColumnType("int");

                    b.HasKey("PaymentTermsId");

                    b.ToTable("Terms");

                    b.HasData(
                        new
                        {
                            PaymentTermsId = 1,
                            Description = "Net 30 days",
                            DueDays = 30
                        },
                        new
                        {
                            PaymentTermsId = 2,
                            Description = "Net 7 days",
                            DueDays = 7
                        },
                        new
                        {
                            PaymentTermsId = 3,
                            Description = "Net 10 days",
                            DueDays = 10
                        });
                });

            modelBuilder.Entity("VendorInvoicesApp.Entities.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorId"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceOrState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorContactFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorContactLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipOrPostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VendorId");

                    b.ToTable("Vendors");

                    b.HasData(
                        new
                        {
                            VendorId = 1,
                            Address1 = "PO Box 87373",
                            Address2 = "",
                            City = "Chicago",
                            IsDeleted = false,
                            Name = "Allen Hill Company",
                            ProvinceOrState = "IL",
                            VendorContactEmail = "allen.hill@company.com",
                            VendorContactFirstName = "Allen",
                            VendorContactLastName = "Hill",
                            VendorPhone = "+14844458615",
                            ZipOrPostalCode = "60290"
                        },
                        new
                        {
                            VendorId = 2,
                            Address1 = "Box 52001",
                            Address2 = "",
                            City = "San Francisco",
                            IsDeleted = false,
                            Name = "Bolton Gas & Electric",
                            ProvinceOrState = "CA",
                            VendorContactEmail = "bolton.smith@company.com",
                            VendorContactFirstName = "Bolton",
                            VendorContactLastName = "Smith",
                            VendorPhone = "+14844458715",
                            ZipOrPostalCode = "94101"
                        },
                        new
                        {
                            VendorId = 3,
                            Address1 = "Marion",
                            Address2 = "",
                            City = "Marion County",
                            IsDeleted = false,
                            Name = "Carling Publishers Weekly",
                            ProvinceOrState = "OH",
                            VendorContactEmail = "bolton.smith@company.com",
                            VendorContactFirstName = "Bolton",
                            VendorContactLastName = "Smith",
                            VendorPhone = "+14844458715",
                            ZipOrPostalCode = "94101"
                        },
                        new
                        {
                            VendorId = 4,
                            Address1 = "Marion",
                            Address2 = "",
                            City = "Marion County",
                            IsDeleted = false,
                            Name = "Famouse Cookies Inc",
                            ProvinceOrState = "OH",
                            VendorContactEmail = "bolton.smith@company.com",
                            VendorContactFirstName = "Bolton",
                            VendorContactLastName = "Smith",
                            VendorPhone = "+14844458715",
                            ZipOrPostalCode = "94101"
                        },
                        new
                        {
                            VendorId = 5,
                            Address1 = "Marion",
                            Address2 = "",
                            City = "Marion County",
                            IsDeleted = false,
                            Name = "Kimberly Cakes Inc",
                            ProvinceOrState = "OH",
                            VendorContactEmail = "bolton.smith@company.com",
                            VendorContactFirstName = "Bolton",
                            VendorContactLastName = "Smith",
                            VendorPhone = "+14844458715",
                            ZipOrPostalCode = "94101"
                        },
                        new
                        {
                            VendorId = 6,
                            Address1 = "Marion",
                            Address2 = "",
                            City = "Marion County",
                            IsDeleted = false,
                            Name = "Lalamove Company",
                            ProvinceOrState = "OH",
                            VendorContactEmail = "bolton.smith@company.com",
                            VendorContactFirstName = "Bolton",
                            VendorContactLastName = "Smith",
                            VendorPhone = "+14844458715",
                            ZipOrPostalCode = "94101"
                        },
                        new
                        {
                            VendorId = 7,
                            Address1 = "Marion",
                            Address2 = "",
                            City = "Marion County",
                            IsDeleted = false,
                            Name = "Romblon Company",
                            ProvinceOrState = "OH",
                            VendorContactEmail = "bolton.smith@company.com",
                            VendorContactFirstName = "Bolton",
                            VendorContactLastName = "Smith",
                            VendorPhone = "+14844458715",
                            ZipOrPostalCode = "94101"
                        },
                        new
                        {
                            VendorId = 8,
                            Address1 = "Marion",
                            Address2 = "",
                            City = "Marion County",
                            IsDeleted = false,
                            Name = "Southern Importers Company",
                            ProvinceOrState = "OH",
                            VendorContactEmail = "bolton.smith@company.com",
                            VendorContactFirstName = "Bolton",
                            VendorContactLastName = "Smith",
                            VendorPhone = "+14844458715",
                            ZipOrPostalCode = "94101"
                        },
                        new
                        {
                            VendorId = 9,
                            Address1 = "Marion",
                            Address2 = "",
                            City = "Marion County",
                            IsDeleted = false,
                            Name = "XYZ Company",
                            ProvinceOrState = "OH",
                            VendorContactEmail = "bolton.smith@company.com",
                            VendorContactFirstName = "Bolton",
                            VendorContactLastName = "Smith",
                            VendorPhone = "+14844458715",
                            ZipOrPostalCode = "94101"
                        },
                        new
                        {
                            VendorId = 10,
                            Address1 = "Marion",
                            Address2 = "",
                            City = "Marion County",
                            IsDeleted = false,
                            Name = "Zeebra Company",
                            ProvinceOrState = "OH",
                            VendorContactEmail = "bolton.smith@company.com",
                            VendorContactFirstName = "Bolton",
                            VendorContactLastName = "Smith",
                            VendorPhone = "+14844458715",
                            ZipOrPostalCode = "94101"
                        });
                });

            modelBuilder.Entity("VendorInvoicesApp.Entities.Invoice", b =>
                {
                    b.HasOne("VendorInvoicesApp.Entities.PaymentTerms", "PaymentTerms")
                        .WithMany("Invoices")
                        .HasForeignKey("PaymentTermsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VendorInvoicesApp.Entities.Vendor", "Vendor")
                        .WithMany("Invoices")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentTerms");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("VendorInvoicesApp.Entities.InvoiceLineItem", b =>
                {
                    b.HasOne("VendorInvoicesApp.Entities.Invoice", "Invoice")
                        .WithMany("InvoiceLineItems")
                        .HasForeignKey("InvoiceId");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("VendorInvoicesApp.Entities.Invoice", b =>
                {
                    b.Navigation("InvoiceLineItems");
                });

            modelBuilder.Entity("VendorInvoicesApp.Entities.PaymentTerms", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("VendorInvoicesApp.Entities.Vendor", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
